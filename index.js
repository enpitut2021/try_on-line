var cvs = document.createElement("canvas");
cvs.width = 1000;
cvs.height = 1000;
cvs.style = "border:4px solid";
document.getElementById("container").appendChild(cvs);
var ctx = cvs.getContext("2d");

/* ここから描画処理 */ //入力文字列を蓄積

const svg = document.querySelector("svg");

const SIZE = 600;

function drawLeftArm(ctx) {
  ctx.moveTo(654.83, 596.44);
  ctx.bezierCurveTo(647.1800000000001, 582.35, 635.9000000000001, 575.9000000000001, 610.52, 556.57);
  ctx.bezierCurveTo(585.1399999999999, 537.24, 578.3, 500.1700000000001, 546.88, 473.19000000000005);
  ctx.bezierCurveTo(515.46, 446.21000000000004, 465.98, 387.44000000000005, 447.74, 375.2800000000001);
  ctx.bezierCurveTo(429.5, 363.1200000000001, 397.88, 358.74000000000007, 391.07, 349.2800000000001);
  ctx.bezierCurveTo(384.26, 339.8200000000001, 388.39, 320.1000000000001, 388.39, 320.1000000000001);
  ctx.translate(373.8220670349282, 302.80874703426116);
}

function drawHead(ctx) {
  ctx.arc(0, 0, 22.61, 0.8706707753487872, 0.29581481519187036, 1);
  ctx.translate(-373.8220670349282, -302.80874703426116);
  ctx.translate(332.04883752633157, 289.10572748316656);
  ctx.arc(0, 0, 66.57, 0.30978736399183415, 0.12249739336113949, 1);
  ctx.translate(-332.04883752633157, -289.10572748316656);
  ctx.bezierCurveTo(398.12, 297.24000000000007, 406.39, 290.9100000000001, 406.39, 283.86000000000007);
  ctx.translate(394.9500391991014, 283.83005214692395);
  ctx.arc(0, 0, 11.44, 0.00261782231481788, -1.0582692376778977, 1);
  ctx.translate(-394.9500391991014, -283.83005214692395);
  ctx.bezierCurveTo(400.96, 273.0200000000001, 408.98, 255.79000000000008, 398.9, 240.76000000000008);
  ctx.bezierCurveTo(393.52, 232.76000000000008, 384.67999999999995, 229.51000000000008, 379.31, 227.50000000000009);
  ctx.translate(360, 281.31015517539424);
  ctx.arc(0, 0, 57.17, -1.2262554608441671, -1.9153371927456257, 1);
  ctx.translate(-360, -281.31015517539424);
  ctx.bezierCurveTo(335.32, 229.50000000000009, 326.48, 232.72000000000008, 321.1, 240.76000000000008);
  ctx.bezierCurveTo(311.02000000000004, 255.76000000000008, 319.04, 273.0200000000001, 319.44, 273.86000000000007);
  ctx.translate(325.0499608008986, 283.83005214692395);
  ctx.arc(0, 0, 11.44, -2.0833234159119005, -3.1442104759046163, 1);
  ctx.translate(-325.0499608008986, -283.83005214692395);
  ctx.bezierCurveTo(313.61, 290.9100000000001, 321.88, 297.24000000000007, 321.88, 297.24000000000007);
  ctx.translate(387.95116247366843, 289.10572748316656);
  ctx.arc(0, 0, 66.57, 3.019095260228655, 2.8318052895979604, 1);
  ctx.translate(-387.95116247366843, -289.10572748316656);
  ctx.translate(346.1779329650718, 302.80874703426116);
  ctx.arc(0, 0, 22.61, 2.845777838397923, 2.270921878241006, 1);
  ctx.translate(-346.1779329650718, -302.80874703426116);
}

function drawRightArm(ctx) {
  ctx.bezierCurveTo(331.61, 320.1000000000001, 335.74, 339.80000000000007, 328.93, 349.2800000000001);
  ctx.bezierCurveTo(328.93, 349.2800000000001, 290.5, 363.1500000000001, 272.26, 375.2800000000001);
  ctx.bezierCurveTo(272.26, 375.2800000000001, 204.54, 446.2000000000001, 173.12, 473.19000000000005);
  ctx.bezierCurveTo(173.12, 473.19000000000005, 134.86, 537.19, 109.48, 556.57);
  ctx.bezierCurveTo(109.48, 556.57, 72.82000000000001, 582.35, 65.17, 596.44);
  ctx.translate(127.27018816772559, 631.0633538169409);
  ctx.arc(0, 0, 71.1, -2.63297882858533, -3.2043151526373426, 1);
  ctx.translate(-127.27018816772559, -631.0633538169409);
  ctx.bezierCurveTo(57.120000000000005, 646.7900000000001, 65.57000000000001, 635.0300000000001, 72.82000000000001, 624.8000000000001);
  ctx.bezierCurveTo(80.07000000000001, 614.57, 71.21000000000001, 616.1800000000001, 78.06, 606.5100000000001);
  ctx.bezierCurveTo(84.91, 596.8400000000001, 92.56, 592.82, 95.38, 594.8300000000002);
  ctx.bezierCurveTo(98.19999999999999, 596.8400000000003, 69.6, 619.8300000000002, 85.31, 618.2000000000002);
  ctx.bezierCurveTo(101.02000000000001, 616.5700000000002, 106.31, 594.8300000000002, 118.74000000000001, 580.7300000000001);
  ctx.bezierCurveTo(131.17000000000002, 566.6300000000001, 165.87, 528.3700000000001, 195.68, 506.22000000000014);
  ctx.bezierCurveTo(225.49, 484.07000000000016, 294, 387.79, 291.14, 423.64);
}

function drawRightBody(ctx) {
  ctx.bezierCurveTo(288.28, 459.48999999999995, 297.14, 525.55, 297.14, 549.72);
  ctx.bezierCurveTo(297.14, 573.8900000000001, 284.7, 577.51, 279.06, 617);
}

function drawRightLeg(ctx) {
  ctx.bezierCurveTo(273.42, 656.49, 280.37, 758.06, 297.75, 790.42);
  ctx.bezierCurveTo(315.13, 822.78, 298.95, 825.1899999999999, 301.35, 881.52);
  ctx.bezierCurveTo(303.75000000000006, 937.85, 339.71000000000004, 993.6, 322.93, 1023.52);
  ctx.bezierCurveTo(306.15, 1053.44, 290.56, 1055.28, 315.13, 1055.28);
  ctx.bezierCurveTo(339.7, 1055.28, 361.28, 1060.68, 352.28999999999996, 1037.28);
  ctx.bezierCurveTo(343.29999999999995, 1013.8799999999999, 355.89, 918.61, 354.09, 883.8499999999999);
  ctx.bezierCurveTo(352.28999999999996, 849.0899999999998, 346.9, 838.3, 346.29999999999995, 808.3299999999999);
  ctx.bezierCurveTo(345.91999999999996, 789.4399999999999, 348.63999999999993, 786.5099999999999, 351.15, 775.1999999999999);
  ctx.bezierCurveTo(353.92999999999995, 762.6899999999999, 354.42999999999995, 753.39, 354.69, 741.81);
  ctx.bezierCurveTo(354.99, 728.55, 356.33, 707.17, 360, 670.25);
}

function drawLeftLeg(ctx) {
  ctx.bezierCurveTo(363.67, 707.17, 365, 728.55, 365.31, 741.81);
  ctx.bezierCurveTo(365.57, 753.39, 366.07, 762.6899999999999, 368.85, 775.1999999999999);
  ctx.bezierCurveTo(371.36, 786.5099999999999, 374.08000000000004, 789.4399999999999, 373.70000000000005, 808.3299999999999);
  ctx.bezierCurveTo(373.1, 838.3299999999999, 367.70000000000005, 849.0899999999999, 365.91, 883.8499999999999);
  ctx.bezierCurveTo(364.12, 918.6099999999999, 376.70000000000005, 1013.9099999999999, 367.71000000000004, 1037.28);
  ctx.bezierCurveTo(358.72, 1060.65, 380.29, 1055.28, 404.87, 1055.28);
  ctx.bezierCurveTo(429.45, 1055.28, 413.87, 1053.48, 397.07, 1023.52);
  ctx.bezierCurveTo(380.27, 993.56, 416.25, 937.81, 418.65, 881.52);
  ctx.bezierCurveTo(421.04999999999995, 825.23, 404.87, 822.79, 422.25, 790.42);
  ctx.bezierCurveTo(439.63, 758.05, 446.58, 656.46, 440.94, 617);
}

function drawLeftBody(ctx) {
  ctx.bezierCurveTo(435.3, 577.54, 422.82, 573.9, 422.82, 549.73);
  ctx.bezierCurveTo(422.82, 525.5600000000001, 431.68, 459.5, 428.82, 423.65000000000003);
}

function drawLeftArm2(ctx) {
  ctx.bezierCurveTo(425.96, 387.80000000000007, 494.47, 484.07000000000005, 524.28, 506.23); //右側の腕の脇から肘にかけての内側
  ctx.bezierCurveTo(554.0899999999999, 528.39, 588.73, 566.65, 601.22, 580.74); //右側の手、前腕、内側
  ctx.bezierCurveTo(613.71, 594.83, 619, 616.58, 634.69, 618.2); //右側の親指外側
  ctx.bezierCurveTo(650.3800000000001, 619.82, 621.8000000000001, 596.85, 624.62, 594.83); //右側の親指内側
  ctx.bezierCurveTo(627.4399999999999, 592.8100000000001, 635.09, 596.83, 641.94, 606.51); //右側の手の内側
  ctx.bezierCurveTo(648.7900000000001, 616.1899999999999, 639.94, 614.5699999999999, 647.1800000000001, 624.8); //右側の指の先端の一歩手前の窪んでいる部分
  ctx.bezierCurveTo(654.4200000000001, 635.03, 662.8800000000001, 646.8, 663.69, 635.52); //右側の指の先端の内側の部分
  ctx.translate(592.7298118322744, 631.0633538169409);
  ctx.rotate(0);
  ctx.scale(1, 1);
  ctx.arc(0, 0, 71.1, 0.06272249904754652, -0.508613825004464, 1); //右側の手の指先の外の部分
  ctx.scale(1, 1);
  ctx.rotate(0);
  ctx.translate(-592.7298118322744, -631.0633538169409);
}

ctx.fillStyle = "#000000";
ctx.translate(0, -200);
ctx.beginPath();
drawLeftArm(ctx);
drawHead(ctx);
drawRightArm(ctx);
drawRightBody(ctx);
drawRightLeg(ctx);
drawLeftLeg(ctx);
drawLeftBody(ctx);
drawLeftArm2(ctx);
ctx.closePath();
ctx.fill();
ctx.stroke();
