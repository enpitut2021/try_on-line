var cvs = document.createElement("canvas");
cvs.width = 1000;
cvs.height = 1000;
cvs.style = "border:4px solid";
document.getElementById("container").appendChild(cvs);
var ctx = cvs.getContext("2d");

/* ここから描画処理 */ //入力文字列を蓄積

const svg = document.querySelector("svg");

const SIZE = 600;

class MaleDrawer {
  drawLeftArm(ctx) {
    ctx.moveTo(654.83, 596.44);
    ctx.bezierCurveTo(647.1800000000001, 582.35, 635.9000000000001, 575.9000000000001, 610.52, 556.57);
    ctx.bezierCurveTo(585.1399999999999, 537.24, 578.3, 500.1700000000001, 546.88, 473.19000000000005);
    ctx.bezierCurveTo(515.46, 446.21000000000004, 465.98, 387.44000000000005, 447.74, 375.2800000000001);
    ctx.bezierCurveTo(429.5, 363.1200000000001, 397.88, 358.74000000000007, 391.07, 349.2800000000001);
    ctx.bezierCurveTo(384.26, 339.8200000000001, 388.39, 320.1000000000001, 388.39, 320.1000000000001);
    ctx.translate(373.8220670349282, 302.80874703426116);
  }

  drawHead(ctx) {
    ctx.arc(0, 0, 22.61, 0.8706707753487872, 0.29581481519187036, 1);
    ctx.translate(-373.8220670349282, -302.80874703426116);
    ctx.translate(332.04883752633157, 289.10572748316656);
    ctx.arc(0, 0, 66.57, 0.30978736399183415, 0.12249739336113949, 1);
    ctx.translate(-332.04883752633157, -289.10572748316656);
    ctx.bezierCurveTo(398.12, 297.24000000000007, 406.39, 290.9100000000001, 406.39, 283.86000000000007);
    ctx.translate(394.9500391991014, 283.83005214692395);
    ctx.arc(0, 0, 11.44, 0.00261782231481788, -1.0582692376778977, 1);
    ctx.translate(-394.9500391991014, -283.83005214692395);
    ctx.bezierCurveTo(400.96, 273.0200000000001, 408.98, 255.79000000000008, 398.9, 240.76000000000008);
    ctx.bezierCurveTo(393.52, 232.76000000000008, 384.67999999999995, 229.51000000000008, 379.31, 227.50000000000009);
    ctx.translate(360, 281.31015517539424);
    ctx.arc(0, 0, 57.17, -1.2262554608441671, -1.9153371927456257, 1);
    ctx.translate(-360, -281.31015517539424);
    ctx.bezierCurveTo(335.32, 229.50000000000009, 326.48, 232.72000000000008, 321.1, 240.76000000000008);
    ctx.bezierCurveTo(311.02000000000004, 255.76000000000008, 319.04, 273.0200000000001, 319.44, 273.86000000000007);
    ctx.translate(325.0499608008986, 283.83005214692395);
    ctx.arc(0, 0, 11.44, -2.0833234159119005, -3.1442104759046163, 1);
    ctx.translate(-325.0499608008986, -283.83005214692395);
    ctx.bezierCurveTo(313.61, 290.9100000000001, 321.88, 297.24000000000007, 321.88, 297.24000000000007);
    ctx.translate(387.95116247366843, 289.10572748316656);
    ctx.arc(0, 0, 66.57, 3.019095260228655, 2.8318052895979604, 1);
    ctx.translate(-387.95116247366843, -289.10572748316656);
    ctx.translate(346.1779329650718, 302.80874703426116);
    ctx.arc(0, 0, 22.61, 2.845777838397923, 2.270921878241006, 1);
    ctx.translate(-346.1779329650718, -302.80874703426116);
  }

  drawRightArm(ctx) {
    ctx.bezierCurveTo(331.61, 320.1000000000001, 335.74, 339.80000000000007, 328.93, 349.2800000000001);
    ctx.bezierCurveTo(328.93, 349.2800000000001, 290.5, 363.1500000000001, 272.26, 375.2800000000001);
    ctx.bezierCurveTo(272.26, 375.2800000000001, 204.54, 446.2000000000001, 173.12, 473.19000000000005);
    ctx.bezierCurveTo(173.12, 473.19000000000005, 134.86, 537.19, 109.48, 556.57);
    ctx.bezierCurveTo(109.48, 556.57, 72.82000000000001, 582.35, 65.17, 596.44);
    ctx.translate(127.27018816772559, 631.0633538169409);
    ctx.arc(0, 0, 71.1, -2.63297882858533, -3.2043151526373426, 1);
    ctx.translate(-127.27018816772559, -631.0633538169409);
    ctx.bezierCurveTo(57.120000000000005, 646.7900000000001, 65.57000000000001, 635.0300000000001, 72.82000000000001, 624.8000000000001);
    ctx.bezierCurveTo(80.07000000000001, 614.57, 71.21000000000001, 616.1800000000001, 78.06, 606.5100000000001);
    ctx.bezierCurveTo(84.91, 596.8400000000001, 92.56, 592.82, 95.38, 594.8300000000002);
    ctx.bezierCurveTo(98.19999999999999, 596.8400000000003, 69.6, 619.8300000000002, 85.31, 618.2000000000002);
    ctx.bezierCurveTo(101.02000000000001, 616.5700000000002, 106.31, 594.8300000000002, 118.74000000000001, 580.7300000000001);
    ctx.bezierCurveTo(131.17000000000002, 566.6300000000001, 165.87, 528.3700000000001, 195.68, 506.22000000000014);
    ctx.bezierCurveTo(225.49, 484.07000000000016, 294, 387.79, 291.14, 423.64);
  }

  drawRightBody(ctx) {
    ctx.bezierCurveTo(288.28, 459.48999999999995, 297.14, 525.55, 297.14, 549.72);
    ctx.bezierCurveTo(297.14, 573.8900000000001, 284.7, 577.51, 279.06, 617);
  }

  drawRightLeg(ctx) {
    ctx.bezierCurveTo(273.42, 656.49, 280.37, 758.06, 297.75, 790.42);
    ctx.bezierCurveTo(315.13, 822.78, 298.95, 825.1899999999999, 301.35, 881.52);
    ctx.bezierCurveTo(303.75000000000006, 937.85, 339.71000000000004, 993.6, 322.93, 1023.52);
    ctx.bezierCurveTo(306.15, 1053.44, 290.56, 1055.28, 315.13, 1055.28);
    ctx.bezierCurveTo(339.7, 1055.28, 361.28, 1060.68, 352.28999999999996, 1037.28);
    ctx.bezierCurveTo(343.29999999999995, 1013.8799999999999, 355.89, 918.61, 354.09, 883.8499999999999);
    ctx.bezierCurveTo(352.28999999999996, 849.0899999999998, 346.9, 838.3, 346.29999999999995, 808.3299999999999);
    ctx.bezierCurveTo(345.91999999999996, 789.4399999999999, 348.63999999999993, 786.5099999999999, 351.15, 775.1999999999999);
    ctx.bezierCurveTo(353.92999999999995, 762.6899999999999, 354.42999999999995, 753.39, 354.69, 741.81);
    ctx.bezierCurveTo(354.99, 728.55, 356.33, 707.17, 360, 670.25);
  }

  drawLeftLeg(ctx) {
    ctx.bezierCurveTo(363.67, 707.17, 365, 728.55, 365.31, 741.81);
    ctx.bezierCurveTo(365.57, 753.39, 366.07, 762.6899999999999, 368.85, 775.1999999999999);
    ctx.bezierCurveTo(371.36, 786.5099999999999, 374.08000000000004, 789.4399999999999, 373.70000000000005, 808.3299999999999);
    ctx.bezierCurveTo(373.1, 838.3299999999999, 367.70000000000005, 849.0899999999999, 365.91, 883.8499999999999);
    ctx.bezierCurveTo(364.12, 918.6099999999999, 376.70000000000005, 1013.9099999999999, 367.71000000000004, 1037.28);
    ctx.bezierCurveTo(358.72, 1060.65, 380.29, 1055.28, 404.87, 1055.28);
    ctx.bezierCurveTo(429.45, 1055.28, 413.87, 1053.48, 397.07, 1023.52);
    ctx.bezierCurveTo(380.27, 993.56, 416.25, 937.81, 418.65, 881.52);
    ctx.bezierCurveTo(421.04999999999995, 825.23, 404.87, 822.79, 422.25, 790.42);
    ctx.bezierCurveTo(439.63, 758.05, 446.58, 656.46, 440.94, 617);
  }

  drawLeftBody(ctx) {
    ctx.bezierCurveTo(435.3, 577.54, 422.82, 573.9, 422.82, 549.73);
    ctx.bezierCurveTo(422.82, 525.5600000000001, 431.68, 459.5, 428.82, 423.65000000000003);
  }

  drawLeftArm2(ctx) {
    ctx.bezierCurveTo(425.96, 387.80000000000007, 494.47, 484.07000000000005, 524.28, 506.23); //右側の腕の脇から肘にかけての内側
    ctx.bezierCurveTo(554.0899999999999, 528.39, 588.73, 566.65, 601.22, 580.74); //右側の手、前腕、内側
    ctx.bezierCurveTo(613.71, 594.83, 619, 616.58, 634.69, 618.2); //右側の親指外側
    ctx.bezierCurveTo(650.3800000000001, 619.82, 621.8000000000001, 596.85, 624.62, 594.83); //右側の親指内側
    ctx.bezierCurveTo(627.4399999999999, 592.8100000000001, 635.09, 596.83, 641.94, 606.51); //右側の手の内側
    ctx.bezierCurveTo(648.7900000000001, 616.1899999999999, 639.94, 614.5699999999999, 647.1800000000001, 624.8); //右側の指の先端の一歩手前の窪んでいる部分
    ctx.bezierCurveTo(654.4200000000001, 635.03, 662.8800000000001, 646.8, 663.69, 635.52); //右側の指の先端の内側の部分
    ctx.translate(592.7298118322744, 631.0633538169409);
    ctx.arc(0, 0, 71.1, 0.06272249904754652, -0.508613825004464, 1); //右側の手の指先の外の部分
    ctx.translate(-592.7298118322744, -631.0633538169409);
  }
}

class FemaleDrawer {
  drawLeftArm(ctx) {
    ctx.moveTo(647.06, 584.49);
    ctx.bezierCurveTo(634.66, 570.3100000000001, 635.8399999999999, 581.49, 622.25, 566.77);
    ctx.bezierCurveTo(608.6600000000001, 552.05, 575.58, 510.65, 557.25, 489.96999999999997);
    ctx.bezierCurveTo(538.92, 469.28999999999996, 477.03, 394.41999999999996, 457.34000000000003, 382.60999999999996);
    ctx.bezierCurveTo(437.6500000000001, 370.79999999999995, 388.34000000000003, 371.84999999999997, 387.28000000000003, 365.03);
    ctx.translate(500.2293790309902, 348.6564030673244);
  }

  drawHead(ctx) {
    ctx.arc(0, 0, 114.13, 2.997631463425505, 3.1184275490345668, 0);
    ctx.translate(-500.2293790309902, -348.6564030673244);
    ctx.lineTo(408.13000000000005, 347.10999999999996);
    ctx.bezierCurveTo(
      408.13000000000005,
      347.10999999999996,
      422.75000000000006,
      249.58999999999997,
      397.13000000000005,
      234.95999999999995
    );
    ctx.bezierCurveTo(371.51000000000005, 220.32999999999993, 360, 224.14, 360, 224.14);
    ctx.bezierCurveTo(360, 224.14, 348.42, 220.32999999999998, 322.82, 234.95999999999998);
    ctx.bezierCurveTo(297.21999999999997, 249.58999999999997, 311.82, 347.11, 311.82, 347.11);
    ctx.lineTo(333.82, 351.3);
    ctx.translate(219.71592400804292, 348.86756459043846);
    ctx.arc(0, 0, 114.13, 0.021314462435659046, 0.14182638961868416, 0);
    ctx.translate(-219.71592400804292, -348.86756459043846);
  }

  drawRightArm(ctx) {
    ctx.bezierCurveTo(331.65, 371.82, 282.32, 370.77, 262.64, 382.58);
    ctx.bezierCurveTo(242.95999999999998, 394.39, 181.05, 469.29, 162.73, 490);
    ctx.bezierCurveTo(144.40999999999997, 510.71, 111.33999999999999, 552, 97.72999999999999, 566.8);
    ctx.bezierCurveTo(84.11999999999999, 581.5999999999999, 85.32, 570.3399999999999, 72.91999999999999, 584.52);
    ctx.bezierCurveTo(60.51999999999998, 598.7, 44.55999999999999, 638.28, 60.50999999999999, 631.78);
    ctx.bezierCurveTo(76.46, 625.28, 70, 608.12, 88.3, 594.54);
    ctx.bezierCurveTo(106.6, 580.9599999999999, 80.62, 607.54, 84.75, 614.62);
    ctx.bezierCurveTo(88.88, 621.7, 105.43, 588.62, 120.75, 572.6800000000001);
    ctx.bezierCurveTo(136.07, 556.7400000000001, 165.65, 537.82, 189.28, 515.3700000000001);
    ctx.bezierCurveTo(212.91, 492.9200000000002, 297.47, 392.5200000000001, 291.68, 422.4300000000001);
  }

  drawRightBody(ctx) {
    ctx.bezierCurveTo(285.89, 452.34000000000015, 279.62, 446.54000000000013, 283.79, 468.10000000000014);
    ctx.bezierCurveTo(287.96000000000004, 489.66000000000014, 295.62, 487.27000000000015, 298.49, 509.27000000000015);
    ctx.bezierCurveTo(301.36, 531.2700000000002, 276.49, 586.2700000000002, 275.05, 628.3800000000001);
  }

  drawRightLeg(ctx) {
    ctx.bezierCurveTo(273.61, 670.49, 300.44, 763.75, 300.92, 803);
    ctx.bezierCurveTo(301.40000000000003, 842.25, 291.35, 865.66, 303.31, 909.67);
    ctx.bezierCurveTo(315.27, 953.68, 327.71, 977.5899999999999, 324.84000000000003, 1006.77);
    ctx.bezierCurveTo(321.9700000000001, 1035.95, 287.53000000000003, 1055.08, 306.66, 1055.56);
    ctx.bezierCurveTo(325.79, 1056.04, 357.84000000000003, 1059.3899999999999, 355.93, 1049.34);
    ctx.bezierCurveTo(354.02, 1039.29, 347.32, 1014.8999999999999, 347.8, 995.7699999999999);
    ctx.bezierCurveTo(348.28000000000003, 976.6399999999999, 352.1, 911.0999999999999, 352.58, 885.7699999999999);
    ctx.bezierCurveTo(353.05999999999995, 860.4399999999998, 348.28, 856.5899999999999, 348.76, 834.5899999999999);
    ctx.bezierCurveTo(349.24, 812.5899999999999, 360, 652.77, 360, 652.77);
  }

  drawLeftLeg(ctx) {
    ctx.bezierCurveTo(360, 652.77, 370.77, 812.54, 371.24, 834.54);
    ctx.bezierCurveTo(371.71000000000004, 856.54, 366.94, 860.37, 367.42, 885.7199999999999);
    ctx.bezierCurveTo(367.90000000000003, 911.0699999999998, 371.72, 976.6099999999999, 372.2, 995.7199999999999);
    ctx.bezierCurveTo(372.67999999999995, 1014.8299999999999, 365.97999999999996, 1039.25, 364.07, 1049.29);
    ctx.bezierCurveTo(362.16, 1059.33, 394.2, 1055.99, 413.34, 1055.51);
    ctx.bezierCurveTo(432.47999999999996, 1055.03, 398.03, 1035.9, 395.15999999999997, 1006.72);
    ctx.bezierCurveTo(392.28999999999996, 977.54, 404.72999999999996, 953.63, 416.68999999999994, 909.62);
    ctx.bezierCurveTo(428.6499999999999, 865.61, 418.59999999999997, 842.17, 419.0799999999999, 802.95);
    ctx.bezierCurveTo(419.5599999999999, 763.7300000000001, 446.3399999999999, 670.45, 444.9099999999999, 628.36);
  }

  drawLeftBody(ctx) {
    ctx.bezierCurveTo(443.4799999999999, 586.27, 418.5999999999999, 531.25, 421.4699999999999, 509.25);
    ctx.bezierCurveTo(424.3399999999999, 487.25, 431.9899999999999, 489.64, 436.1699999999999, 468.08);
    ctx.bezierCurveTo(440.3499999999999, 446.52, 434.0799999999999, 452.31, 428.2799999999999, 422.40999999999997);
  }

  drawLeftArm2(ctx) {
    ctx.bezierCurveTo(422.4799999999999, 392.50999999999993, 507.0499999999999, 492.9, 530.68, 515.3499999999999);
    ctx.bezierCurveTo(554.31, 537.7999999999998, 583.8499999999999, 556.7099999999999, 599.2099999999999, 572.6599999999999);
    ctx.bezierCurveTo(614.5699999999999, 588.6099999999998, 631.1099999999999, 621.6599999999999, 635.2099999999999, 614.5999999999999);
    ctx.bezierCurveTo(639.31, 607.54, 613.39, 581, 631.7, 594.54);
    ctx.bezierCurveTo(650.0100000000001, 608.0799999999999, 643.5200000000001, 625.26, 659.47, 631.75);
    ctx.bezierCurveTo(675.42, 638.24, 659.47, 598.67, 647.06, 584.49);
  }
}

const drawer = new FemaleDrawer();
ctx.fillStyle = "#000000";
ctx.translate(0, -200);
ctx.beginPath();
drawer.drawLeftArm(ctx);
drawer.drawHead(ctx);
drawer.drawRightArm(ctx);
drawer.drawRightBody(ctx);
drawer.drawRightLeg(ctx);
drawer.drawLeftLeg(ctx);
drawer.drawLeftBody(ctx);
drawer.drawLeftArm2(ctx);
ctx.closePath();
ctx.fill();
ctx.stroke();
